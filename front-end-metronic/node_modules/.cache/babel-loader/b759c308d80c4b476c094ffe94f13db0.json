{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { MenuComponent, DrawerComponent, ScrollComponent, ScrollTopComponent, StickyComponent, ToggleComponent, SwapperComponent } from '../assets/ts/components';\nimport { useLayout } from './core';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MasterInit() {\n  _s();\n\n  const {\n    config\n  } = useLayout();\n  const isFirstRun = useRef(true);\n\n  const pluginsInitialization = () => {\n    isFirstRun.current = false;\n    setTimeout(() => {\n      ToggleComponent.bootstrap();\n      ScrollTopComponent.bootstrap();\n      DrawerComponent.bootstrap();\n      StickyComponent.bootstrap();\n      MenuComponent.bootstrap();\n      ScrollComponent.bootstrap();\n      SwapperComponent.bootstrap();\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      pluginsInitialization();\n    }\n  }, [config]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(MasterInit, \"sMN/w0Sa8nCWWZsbp5zLlmKxwWc=\", false, function () {\n  return [useLayout];\n});\n\n_c = MasterInit;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasterInit\");","map":{"version":3,"sources":["/Users/nguyenthanhhuy/Documents/GitHub/fullstack_ThucTap/front-end-metronic/src/_metronic/layout/MasterInit.tsx"],"names":["useEffect","useRef","MenuComponent","DrawerComponent","ScrollComponent","ScrollTopComponent","StickyComponent","ToggleComponent","SwapperComponent","useLayout","MasterInit","config","isFirstRun","pluginsInitialization","current","setTimeout","bootstrap"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;AACA,SACEC,aADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,eANF,EAOEC,gBAPF,QAQO,yBARP;AAUA,SAAQC,SAAR,QAAwB,QAAxB;;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAWF,SAAS,EAA1B;AACA,QAAMG,UAAU,GAAGX,MAAM,CAAC,IAAD,CAAzB;;AACA,QAAMY,qBAAqB,GAAG,MAAM;AAClCD,IAAAA,UAAU,CAACE,OAAX,GAAqB,KAArB;AACAC,IAAAA,UAAU,CAAC,MAAM;AACfR,MAAAA,eAAe,CAACS,SAAhB;AACAX,MAAAA,kBAAkB,CAACW,SAAnB;AACAb,MAAAA,eAAe,CAACa,SAAhB;AACAV,MAAAA,eAAe,CAACU,SAAhB;AACAd,MAAAA,aAAa,CAACc,SAAd;AACAZ,MAAAA,eAAe,CAACY,SAAhB;AACAR,MAAAA,gBAAgB,CAACQ,SAAjB;AACD,KARS,EAQP,GARO,CAAV;AASD,GAXD;;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,UAAU,CAACE,OAAf,EAAwB;AACtBF,MAAAA,UAAU,CAACE,OAAX,GAAqB,KAArB;AACAD,MAAAA,qBAAqB;AACtB;AACF,GALQ,EAKN,CAACF,MAAD,CALM,CAAT;AAOA,sBAAO,qCAAP;AACD;;GAxBeD,U;UACGD,S;;;KADHC,U","sourcesContent":["import {useEffect, useRef} from 'react'\r\nimport {\r\n  MenuComponent,\r\n  DrawerComponent,\r\n  ScrollComponent,\r\n  ScrollTopComponent,\r\n  StickyComponent,\r\n  ToggleComponent,\r\n  SwapperComponent,\r\n} from '../assets/ts/components'\r\n\r\nimport {useLayout} from './core'\r\n\r\nexport function MasterInit() {\r\n  const {config} = useLayout()\r\n  const isFirstRun = useRef(true)\r\n  const pluginsInitialization = () => {\r\n    isFirstRun.current = false\r\n    setTimeout(() => {\r\n      ToggleComponent.bootstrap()\r\n      ScrollTopComponent.bootstrap()\r\n      DrawerComponent.bootstrap()\r\n      StickyComponent.bootstrap()\r\n      MenuComponent.bootstrap()\r\n      ScrollComponent.bootstrap()\r\n      SwapperComponent.bootstrap()\r\n    }, 500)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isFirstRun.current) {\r\n      isFirstRun.current = false\r\n      pluginsInitialization()\r\n    }\r\n  }, [config])\r\n\r\n  return <></>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}